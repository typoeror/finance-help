{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\UsersprincOneDriveDocuments\\\\src\\\\components\\\\compoundInterestCalculatorAdv.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Joi from 'joi';\nimport Chart from 'react-apexcharts';\nimport { Input, Button, TableNew, formatCurrency, ordinalSuffixOf, unformattedCurrency } from './helper';\nimport { HowToUse, Faqs, DisplayErrors } from './others';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CompoundInterestCalculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (name, value) => {\n      // console.log(name, value)\n      value = value.target.value;\n\n      if (name === 'p') {\n        this.setState({\n          p: formatCurrency(value, '0,0')\n        });\n      } else if (name === 'r') this.setState({\n        r: value\n      });else if (name === 'period') this.setState({\n        [name]: value\n      });else if (name === 'installmentAmount') this.setState({\n        [name]: value\n      });else if (name === 'compoundedInterval') this.setState({\n        [name]: value\n      });else if (name === 'intPeriod') this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleTimeChange = (name, value) => {\n      const timePeriod = this.state.t;\n      this.setState({\n        t: { ...timePeriod,\n          [name]: value.target.value\n        }\n      });\n    };\n\n    this.handleClick = () => {\n      const {\n        r,\n        t,\n        compoundedInterval,\n        intPeriod\n      } = this.state;\n      const p = unformattedCurrency(this.state.p);\n      console.log(`P: ${p}, R: ${r}, T: ${t}`); // validate inputs\n\n      const inputValidated = Joi.object({\n        p: Joi.number().integer().min(1).label('Principal amount'),\n        r: Joi.number().max(100).greater(0).label('Rate of interest')\n      }).validate({\n        p,\n        r\n      });\n\n      if (inputValidated.error) {\n        this.setState({\n          errors: inputValidated.error.message\n        });\n        return;\n      }\n\n      let prevInputs = {\n        p,\n        r,\n        t,\n        intPeriod,\n        compoundedInterval\n      };\n      this.setState({\n        prevInputs: prevInputs\n      });\n    };\n\n    this.state = {\n      p: 1000,\n      r: 10,\n      t: {\n        y: 1,\n        m: 0\n      },\n      // Investment tenure\n      compoundedInterval: 'y',\n      intPeriod: 'y',\n      prevInputs: null,\n      period: '',\n      installmentAmount: 0,\n      result: null,\n      errors: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.setType('ci');\n  }\n\n  render() {\n    const {\n      p,\n      r,\n      t,\n      compoundedInterval,\n      intPeriod,\n      period,\n      installmentAmount\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/ci/how-to-use\",\n        children: /*#__PURE__*/_jsxDEV(HowToUse, {\n          type: \"ci\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/ci/faqs\",\n        children: /*#__PURE__*/_jsxDEV(Faqs, {\n          type: \"ci\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Compound Interest Calculator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"compound_interest_form\",\n            className: \"calculator-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                name: \"p\",\n                value: p,\n                onChange: this.handleChange,\n                label: \"Principal amount in (Rs.)\",\n                type: \"0\",\n                helpText: \"Amount you can invest today\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Installment, {\n                period: period,\n                installmentAmount: installmentAmount,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"display-flex align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  name: \"r\",\n                  value: r,\n                  onChange: this.handleChange,\n                  label: \"Rate of interest (%)\",\n                  type: \"1\",\n                  min: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-prefix\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"intPeriod\",\n                    value: intPeriod,\n                    className: \"form-input\",\n                    onChange: v => this.handleChange('intPeriod', v),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"m\",\n                      children: \"Monthly\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"y\",\n                      children: \"Yearly\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"display-flex align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Years, {\n                  value: t.y,\n                  onChange: this.handleTimeChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Months, {\n                  value: t.m,\n                  onChange: this.handleTimeChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CompoundedMonthly, {\n                  value: compoundedInterval,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                label: \"Calculate Compound Interest\",\n                onClick: this.handleClick,\n                type: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DisplayErrors, {\n              errors: this.state.errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-right\",\n          children: /*#__PURE__*/_jsxDEV(CalculationRecord, {\n            prevInputs: this.state.prevInputs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CompoundInterestCalculator;\n\nfunction CalculationRecord(_ref) {\n  _s();\n\n  let {\n    prevInputs\n  } = _ref;\n  const [showChart, setShowChart] = useState(false);\n\n  if (!prevInputs) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bigText\",\n      children: \"Let's find out, How much interest you gain on your amount using simple interest.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    r,\n    t,\n    intPeriod,\n    compoundedInterval\n  } = prevInputs;\n  const p = unformattedCurrency(prevInputs.p);\n  const ty = Number(t.y);\n  const tm = Number(t.m);\n  let records = [];\n  let totalInterest = 0,\n      prevPrincipal = p;\n\n  if (isFinite(ty) && ty > 0) {\n    const monthlyIteration = false;\n    const totalIteration = monthlyIteration ? ty * 12 : ty;\n    const yearValue = monthlyIteration ? 1 / 12 : 1;\n    const timeLabel = monthlyIteration ? 'Month' : 'Year';\n\n    for (let i = 1; i <= totalIteration; i++) {\n      let interest = calculateCI({\n        p: prevPrincipal,\n        r,\n        t: {\n          y: yearValue\n        },\n        intPeriod,\n        compoundedInterval\n      });\n      totalInterest += interest;\n      let rowClassNames = monthlyIteration && i % 12 === 0 ? 'highlight-row' : null;\n      records.push({\n        time: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [i, ordinalSuffixOf(i), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeLabel\",\n            children: timeLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this),\n        interest: interest,\n        totalInterest: totalInterest,\n        amount: p + totalInterest,\n        rowClassNames: rowClassNames\n      });\n      prevPrincipal += interest; // console.log(prevPrincipal)\n    }\n  }\n\n  if (isFinite(tm) && tm > 0) {\n    const timeLabel = 'Month';\n\n    if (compoundedInterval === 'y') {\n      let interest = calculateCI({\n        p: prevPrincipal,\n        r,\n        t: {\n          y: 1\n        },\n        intPeriod,\n        compoundedInterval\n      });\n      interest /= 12;\n\n      for (let i = 1; i <= tm; i++) {\n        totalInterest += interest;\n        records.push({\n          time: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [i, ordinalSuffixOf(i), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeLabel\",\n              children: timeLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this),\n          interest: interest,\n          totalInterest: totalInterest,\n          amount: p + totalInterest,\n          rowClassNames: null\n        });\n      }\n    } else if (compoundedInterval === 'h') {\n      let interest;\n\n      for (let i = 1; i <= tm; i++) {\n        if ((i - 1) % 6 === 0) {\n          interest = calculateCI({\n            p: prevPrincipal,\n            r,\n            t: {\n              y: 1 / 2\n            },\n            intPeriod,\n            compoundedInterval\n          });\n          prevPrincipal += interest;\n          interest /= 6;\n        }\n\n        totalInterest += interest;\n        records.push({\n          time: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [i, ordinalSuffixOf(i), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeLabel\",\n              children: timeLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this),\n          interest: interest,\n          totalInterest: totalInterest,\n          amount: p + totalInterest,\n          rowClassNames: null\n        });\n      }\n    } else if (compoundedInterval === 'q') {\n      let interest;\n\n      for (let i = 1; i <= tm; i++) {\n        if ((i - 1) % 3 === 0) {\n          interest = calculateCI({\n            p: prevPrincipal,\n            r,\n            t: {\n              y: 1 / 4\n            },\n            intPeriod,\n            compoundedInterval\n          });\n          prevPrincipal += interest;\n          interest /= 3;\n        }\n\n        totalInterest += interest;\n        records.push({\n          time: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [i, ordinalSuffixOf(i), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeLabel\",\n              children: timeLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this),\n          interest: interest,\n          totalInterest: totalInterest,\n          amount: p + totalInterest,\n          rowClassNames: null\n        });\n      }\n    } else if (compoundedInterval === 'm') {\n      let interest;\n\n      for (let i = 1; i <= tm; i++) {\n        interest = calculateCI({\n          p: prevPrincipal,\n          r,\n          t: {\n            y: 1 / 12\n          },\n          intPeriod,\n          compoundedInterval\n        });\n        totalInterest += interest;\n        records.push({\n          time: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [i, ordinalSuffixOf(i), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeLabel\",\n              children: timeLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this),\n          interest: interest,\n          totalInterest: totalInterest,\n          amount: p + totalInterest,\n          rowClassNames: null\n        });\n        prevPrincipal += interest;\n      }\n    } else if (compoundedInterval === 'd') {\n      let interest;\n\n      for (let i = 1; i <= tm; i++) {\n        interest = calculateCI({\n          p: prevPrincipal,\n          r: r,\n          t: {\n            y: 1 / 12\n          },\n          intPeriod,\n          compoundedInterval\n        });\n        totalInterest += interest;\n        records.push({\n          time: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [i, ordinalSuffixOf(i), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeLabel\",\n              children: timeLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this),\n          interest: interest,\n          totalInterest: totalInterest,\n          amount: p + totalInterest,\n          rowClassNames: null\n        });\n        prevPrincipal += interest;\n      }\n    }\n  }\n\n  console.log(records);\n  const showChartBtn = showChart ? /*#__PURE__*/_jsxDEV(Button, {\n    label: \"Show records\",\n    onClick: () => {\n      setShowChart(false);\n    },\n    type: \"plain\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n    label: \"Show chart\",\n    onClick: () => {\n      setShowChart(true);\n    },\n    type: \"plain\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n  const lastRow = records.at(-1); // console.log(lastRow)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultNew, {\n      p: p,\n      totalInterest: lastRow.totalInterest,\n      totalAmount: lastRow.amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculation-records\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: showChartBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), !showChart && /*#__PURE__*/_jsxDEV(RecordTable, {\n        records: records\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 24\n      }, this), showChart && /*#__PURE__*/_jsxDEV(ViewChart, {\n        records: records\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CalculationRecord, \"8Mxd6H2DmuAaZ3Ciq9GXbo+qxw4=\");\n\n_c = CalculationRecord;\n\nfunction RecordTable(_ref2) {\n  let {\n    records\n  } = _ref2;\n  if (Array.isArray(records) && !records.length) return null;\n  let totalInterest = 0,\n      totalAmount = records.at(-1).amount;\n  records = records.map((r, i) => {\n    totalInterest += r.interest;\n    return { ...r,\n      interest: formatCurrency(r.interest),\n      totalInterest: formatCurrency(r.totalInterest),\n      amount: formatCurrency(r.amount)\n    };\n  });\n  const thead = [{\n    label: 'Time',\n    key: 'time'\n  }, {\n    label: 'Interest',\n    key: 'interest'\n  }, {\n    label: 'Total Interest',\n    key: 'totalInterest'\n  }, {\n    label: 'Balance',\n    key: 'amount'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableNew, {\n      thead: thead,\n      tbody: records,\n      children: /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"highlight-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"td-numeric\",\n            children: \"Total - \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"td-numeric\",\n            children: formatCurrency(totalInterest)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"td-numeric\",\n            children: formatCurrency(totalAmount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c2 = RecordTable;\n\nfunction calculateCI(_ref3) {\n  let {\n    p,\n    r,\n    t,\n    intPeriod,\n    compoundedInterval\n  } = _ref3;\n  r = r / 100;\n  r = intPeriod === 'y' ? r : r * 12;\n  const ty = Number(t.y);\n  const tm = Number(t.m);\n  let totalInterest = 0,\n      newP = p,\n      n;\n\n  switch (compoundedInterval) {\n    case 'h':\n      n = 2;\n      break;\n\n    case 'q':\n      n = 4;\n      break;\n\n    case 'm':\n      n = 12;\n      break;\n\n    case 'd':\n      n = 365;\n      break;\n\n    default:\n      n = 1;\n      break;\n  }\n\n  if (isFinite(ty) && ty > 0) {\n    newP = p * (1 + r / n) ** (ty * n);\n    totalInterest += newP - p;\n  }\n\n  return totalInterest;\n}\n\nfunction ViewChart(_ref4) {\n  let {\n    records\n  } = _ref4;\n  const interest = records.map(r => {\n    let inx = r.amount - records[0].principal;\n    return parseFloat(inx).toFixed(2);\n  });\n  const principal = records.map(r => {\n    let prx = records[0].principal;\n    return parseFloat(prx).toFixed(2);\n  });\n  const amount = records.map(r => r.amount.toFixed(2));\n  const labels = records.map(r => 'Year:' + r.time);\n  console.log(principal, interest, amount);\n  const series = [{\n    name: 'Interest',\n    type: 'column',\n    data: interest\n  }, {\n    name: 'Amount',\n    type: 'area',\n    data: amount\n  }, {\n    name: 'Principal',\n    type: 'line',\n    data: principal\n  }];\n  const options = {\n    chart: {\n      height: 350,\n      type: 'line',\n      stacked: false,\n      toolbar: {\n        show: false,\n        tools: {\n          zoom: false,\n          zoomin: false,\n          zoomout: false,\n          selection: false\n        }\n      }\n    },\n    stroke: {\n      width: [0, 2, 5],\n      curve: 'smooth'\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '50%'\n      }\n    },\n    fill: {\n      opacity: [0.85, 0.25, 1],\n      gradient: {\n        inverseColors: false,\n        shade: 'light',\n        type: 'vertical',\n        opacityFrom: 0.85,\n        opacityTo: 0.55,\n        stops: [0, 100, 100, 100]\n      }\n    },\n    labels: labels,\n    markers: {\n      size: 0\n    },\n    xaxis: {\n      type: 'text',\n      title: {\n        text: 'Years of growth'\n      }\n    },\n    yaxis: {\n      title: {\n        text: 'Amount invested'\n      } // min: 0,\n\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: function (y) {\n          if (typeof y !== 'undefined') {\n            return '₹' + y;\n          }\n\n          return y;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      type: \"line\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 584,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = ViewChart;\n\nfunction Installment(_ref5) {\n  let {\n    period,\n    installmentAmount,\n    onChange\n  } = _ref5;\n  const periods = [{\n    label: 'Monthly',\n    value: 'm'\n  }, {\n    label: 'Yearly',\n    value: 'y'\n  }, {\n    label: 'One time',\n    value: ''\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      htmlFor: \"Installment\",\n      className: \"form-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingRight: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Installment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this), periods.map((p, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"period\",\n          value: p.value,\n          type: \"radio\",\n          checked: p.value === period ? 'checked' : '',\n          onChange: v => onChange('period', v)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), ' ', p.label]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"installmentAmount\",\n      value: installmentAmount,\n      onChange: onChange,\n      label: \"Installment amount\",\n      type: \"1\",\n      min: \"0\",\n      helpText: \"Amount you want to invest regularly\",\n      disabled: period === ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 597,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Installment;\n\nfunction Years(_ref6) {\n  let {\n    value,\n    onChange\n  } = _ref6;\n  const years = Array.from(Array(61), (_, i) => i);\n  const options = years.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: y,\n    children: y\n  }, y, false, {\n    fileName: _jsxFileName,\n    lineNumber: 632,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control mr-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Years\",\n      className: \"form-label\",\n      children: \"Years\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"years\",\n      value: value,\n      className: \"form-input form-select\",\n      onChange: v => onChange('y', v),\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 638,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = Years;\n\nfunction Months(_ref7) {\n  let {\n    value,\n    onChange\n  } = _ref7;\n  const months = Array.from(Array(12), (_, i) => i);\n  const options = months.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: m,\n    children: m\n  }, m, false, {\n    fileName: _jsxFileName,\n    lineNumber: 657,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control mr-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Months\",\n      className: \"form-label\",\n      children: \"Months\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"months\",\n      value: value,\n      className: \"form-input form-select\",\n      onChange: v => onChange('m', v),\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 663,\n    columnNumber: 5\n  }, this);\n}\n\n_c6 = Months;\n\nfunction CompoundedMonthly(_ref8) {\n  let {\n    value,\n    onChange\n  } = _ref8;\n  const compoundedOptions = [{\n    label: 'Yearly (1/yr)',\n    value: 'y'\n  }, {\n    label: 'Half Yearly (2/yr)',\n    value: 'h'\n  }, {\n    label: 'Quarterly (4/yr)',\n    value: 'q'\n  }, {\n    label: 'Monthly (12/yr)',\n    value: 'm'\n  }, {\n    label: 'Daily (365/yr)',\n    value: 'd'\n  }];\n  const options = compoundedOptions.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: m.value,\n    children: m.label\n  }, m.value, false, {\n    fileName: _jsxFileName,\n    lineNumber: 688,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control mr-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Months\",\n      className: \"form-label\",\n      children: \"Compounded Interval\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"compoundedInterval\",\n      value: value,\n      className: \"form-input form-select\",\n      onChange: v => onChange('compoundedInterval', v),\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 694,\n    columnNumber: 5\n  }, this);\n}\n\n_c7 = CompoundedMonthly;\n\nfunction ResultNew(_ref9) {\n  let {\n    p,\n    totalInterest,\n    totalAmount\n  } = _ref9;\n  // return null\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-card display-flex justify-content-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prc-stmt prc-stmt-wrapper\",\n      children: [\"Amount Invested\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-block\",\n        children: formatCurrency(p)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"int-stmt int-stmt-wrapper\",\n      children: [\"Interest Gain\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-block\",\n        children: formatCurrency(totalInterest)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"final-stmt final-stmt-wrapper\",\n      children: [\"Final Amount\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-block\",\n        children: formatCurrency(totalAmount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 713,\n    columnNumber: 5\n  }, this);\n}\n\n_c8 = ResultNew;\n\nfunction Result(_ref10) {\n  let {\n    p,\n    totalInterest,\n    totalAmount\n  } = _ref10;\n  // if (!prevInputs) return null\n  // const { p, t } = prevInputs\n  // const ty = Number(t.y)\n  // const tm = Number(t.m)\n  // let totalTime = ''\n  // if (isFinite(ty) && ty > 0) {\n  //   totalTime += `${ty} years `\n  // }\n  // if (isFinite(tm) && tm > 0) {\n  //   totalTime += `${tm} month `\n  // }\n  // const result = calculateCI(prevInputs)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border-top\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"prc-stmt\",\n      children: [\"Amount Invested\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"float-right\",\n        children: formatCurrency(p)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"int-stmt\",\n      children: [\"Interest Gain\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"float-right\",\n        children: formatCurrency(totalInterest)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"final-stmt\",\n      children: [\"Final Amount\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"float-right\",\n        children: formatCurrency(totalAmount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 746,\n    columnNumber: 5\n  }, this);\n}\n\n_c9 = Result;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"CalculationRecord\");\n$RefreshReg$(_c2, \"RecordTable\");\n$RefreshReg$(_c3, \"ViewChart\");\n$RefreshReg$(_c4, \"Installment\");\n$RefreshReg$(_c5, \"Years\");\n$RefreshReg$(_c6, \"Months\");\n$RefreshReg$(_c7, \"CompoundedMonthly\");\n$RefreshReg$(_c8, \"ResultNew\");\n$RefreshReg$(_c9, \"Result\");","map":{"version":3,"names":["React","Component","useState","Switch","Route","Joi","Chart","Input","Button","TableNew","formatCurrency","ordinalSuffixOf","unformattedCurrency","HowToUse","Faqs","DisplayErrors","CompoundInterestCalculator","constructor","props","handleChange","name","value","target","setState","p","r","handleTimeChange","timePeriod","state","t","handleClick","compoundedInterval","intPeriod","console","log","inputValidated","object","number","integer","min","label","max","greater","validate","error","errors","message","prevInputs","y","m","period","installmentAmount","result","componentDidMount","setType","render","v","CalculationRecord","showChart","setShowChart","ty","Number","tm","records","totalInterest","prevPrincipal","isFinite","monthlyIteration","totalIteration","yearValue","timeLabel","i","interest","calculateCI","rowClassNames","push","time","amount","showChartBtn","lastRow","at","RecordTable","Array","isArray","length","totalAmount","map","thead","key","newP","n","ViewChart","inx","principal","parseFloat","toFixed","prx","labels","series","type","data","options","chart","height","stacked","toolbar","show","tools","zoom","zoomin","zoomout","selection","stroke","width","curve","plotOptions","bar","columnWidth","fill","opacity","gradient","inverseColors","shade","opacityFrom","opacityTo","stops","markers","size","xaxis","title","text","yaxis","tooltip","shared","intersect","formatter","Installment","onChange","periods","paddingRight","Years","years","from","_","Months","months","CompoundedMonthly","compoundedOptions","ResultNew","Result"],"sources":["C:/Users/Admin/Desktop/UsersprincOneDriveDocuments/src/components/compoundInterestCalculatorAdv.js"],"sourcesContent":["import React, { Component, useState } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Joi from 'joi'\r\nimport Chart from 'react-apexcharts'\r\nimport {\r\n  Input,\r\n  Button,\r\n  TableNew,\r\n  formatCurrency,\r\n  ordinalSuffixOf,\r\n  unformattedCurrency,\r\n} from './helper'\r\nimport { HowToUse, Faqs, DisplayErrors } from './others'\r\n\r\nclass CompoundInterestCalculator extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      p: 1000,\r\n      r: 10,\r\n      t: { y: 1, m: 0 }, // Investment tenure\r\n      compoundedInterval: 'y',\r\n      intPeriod: 'y',\r\n      prevInputs: null,\r\n      period: '',\r\n      installmentAmount: 0,\r\n      result: null,\r\n      errors: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setType('ci')\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    // console.log(name, value)\r\n    value = value.target.value\r\n    if (name === 'p') {\r\n      this.setState({ p: formatCurrency(value, '0,0') })\r\n    } else if (name === 'r') this.setState({ r: value })\r\n    else if (name === 'period') this.setState({ [name]: value })\r\n    else if (name === 'installmentAmount') this.setState({ [name]: value })\r\n    else if (name === 'compoundedInterval') this.setState({ [name]: value })\r\n    else if (name === 'intPeriod') this.setState({ [name]: value })\r\n  }\r\n\r\n  handleTimeChange = (name, value) => {\r\n    const timePeriod = this.state.t\r\n    this.setState({ t: { ...timePeriod, [name]: value.target.value } })\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { r, t, compoundedInterval, intPeriod } = this.state\r\n    const p = unformattedCurrency(this.state.p)\r\n    console.log(`P: ${p}, R: ${r}, T: ${t}`)\r\n\r\n    // validate inputs\r\n    const inputValidated = Joi.object({\r\n      p: Joi.number().integer().min(1).label('Principal amount'),\r\n      r: Joi.number().max(100).greater(0).label('Rate of interest'),\r\n    }).validate({\r\n      p,\r\n      r,\r\n    })\r\n\r\n    if (inputValidated.error) {\r\n      this.setState({ errors: inputValidated.error.message })\r\n      return\r\n    }\r\n\r\n    let prevInputs = { p, r, t, intPeriod, compoundedInterval }\r\n    this.setState({ prevInputs: prevInputs })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      p,\r\n      r,\r\n      t,\r\n      compoundedInterval,\r\n      intPeriod,\r\n      period,\r\n      installmentAmount,\r\n    } = this.state\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/ci/how-to-use\">\r\n          <HowToUse type=\"ci\" />\r\n        </Route>\r\n        <Route path=\"/ci/faqs\">\r\n          <Faqs type=\"ci\" />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <div className=\"sidebar-left\">\r\n            <h1>Compound Interest Calculator</h1>\r\n            <div id=\"compound_interest_form\" className=\"calculator-form\">\r\n              <form className=\"form\">\r\n                <Input\r\n                  name=\"p\"\r\n                  value={p}\r\n                  onChange={this.handleChange}\r\n                  label=\"Principal amount in (Rs.)\"\r\n                  type=\"0\"\r\n                  helpText=\"Amount you can invest today\"\r\n                />\r\n                <Installment\r\n                  period={period}\r\n                  installmentAmount={installmentAmount}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div className=\"display-flex align-items-center\">\r\n                  <Input\r\n                    name=\"r\"\r\n                    value={r}\r\n                    onChange={this.handleChange}\r\n                    label=\"Rate of interest (%)\"\r\n                    type=\"1\"\r\n                    min=\"0\"\r\n                  />\r\n                  <div className=\"input-prefix\">\r\n                    <select\r\n                      name=\"intPeriod\"\r\n                      value={intPeriod}\r\n                      className=\"form-input\"\r\n                      onChange={(v) => this.handleChange('intPeriod', v)}\r\n                    >\r\n                      <option value=\"m\">Monthly</option>\r\n                      <option value=\"y\">Yearly</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"display-flex align-items-center\">\r\n                  <Years value={t.y} onChange={this.handleTimeChange} />\r\n                  <Months value={t.m} onChange={this.handleTimeChange} />\r\n                  <CompoundedMonthly\r\n                    value={compoundedInterval}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <Button\r\n                  label=\"Calculate Compound Interest\"\r\n                  onClick={this.handleClick}\r\n                  type=\"success\"\r\n                />\r\n              </form>\r\n              <DisplayErrors errors={this.state.errors} />\r\n              {/* <Result prevInputs={this.state.prevInputs} /> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"sidebar-right\">\r\n            <CalculationRecord prevInputs={this.state.prevInputs} />\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CompoundInterestCalculator\r\n\r\nfunction CalculationRecord({ prevInputs }) {\r\n  const [showChart, setShowChart] = useState(false)\r\n  if (!prevInputs) {\r\n    return (\r\n      <div className=\"bigText\">\r\n        Let's find out, How much interest you gain on your amount using simple\r\n        interest.\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const { r, t, intPeriod, compoundedInterval } = prevInputs\r\n  const p = unformattedCurrency(prevInputs.p)\r\n\r\n  const ty = Number(t.y)\r\n  const tm = Number(t.m)\r\n\r\n  let records = []\r\n  let totalInterest = 0,\r\n    prevPrincipal = p\r\n\r\n  if (isFinite(ty) && ty > 0) {\r\n    const monthlyIteration = false\r\n    const totalIteration = monthlyIteration ? ty * 12 : ty\r\n    const yearValue = monthlyIteration ? 1 / 12 : 1\r\n    const timeLabel = monthlyIteration ? 'Month' : 'Year'\r\n\r\n    for (let i = 1; i <= totalIteration; i++) {\r\n      let interest = calculateCI({\r\n        p: prevPrincipal,\r\n        r,\r\n        t: { y: yearValue },\r\n        intPeriod,\r\n        compoundedInterval,\r\n      })\r\n\r\n      totalInterest += interest\r\n\r\n      let rowClassNames =\r\n        monthlyIteration && i % 12 === 0 ? 'highlight-row' : null\r\n\r\n      records.push({\r\n        time: (\r\n          <span>\r\n            {i}\r\n            {ordinalSuffixOf(i)}\r\n            <span className=\"timeLabel\">{timeLabel}</span>\r\n          </span>\r\n        ),\r\n        interest: interest,\r\n        totalInterest: totalInterest,\r\n        amount: p + totalInterest,\r\n        rowClassNames: rowClassNames,\r\n      })\r\n\r\n      prevPrincipal += interest\r\n      // console.log(prevPrincipal)\r\n    }\r\n  }\r\n  if (isFinite(tm) && tm > 0) {\r\n    const timeLabel = 'Month'\r\n\r\n    if (compoundedInterval === 'y') {\r\n      let interest = calculateCI({\r\n        p: prevPrincipal,\r\n        r,\r\n        t: { y: 1 },\r\n        intPeriod,\r\n        compoundedInterval,\r\n      })\r\n\r\n      interest /= 12\r\n\r\n      for (let i = 1; i <= tm; i++) {\r\n        totalInterest += interest\r\n        records.push({\r\n          time: (\r\n            <span>\r\n              {i}\r\n              {ordinalSuffixOf(i)}\r\n              <span className=\"timeLabel\">{timeLabel}</span>\r\n            </span>\r\n          ),\r\n          interest: interest,\r\n          totalInterest: totalInterest,\r\n          amount: p + totalInterest,\r\n          rowClassNames: null,\r\n        })\r\n      }\r\n    } else if (compoundedInterval === 'h') {\r\n      let interest\r\n      for (let i = 1; i <= tm; i++) {\r\n        if ((i - 1) % 6 === 0) {\r\n          interest = calculateCI({\r\n            p: prevPrincipal,\r\n            r,\r\n            t: { y: 1 / 2 },\r\n            intPeriod,\r\n            compoundedInterval,\r\n          })\r\n          prevPrincipal += interest\r\n          interest /= 6\r\n        }\r\n\r\n        totalInterest += interest\r\n        records.push({\r\n          time: (\r\n            <span>\r\n              {i}\r\n              {ordinalSuffixOf(i)}\r\n              <span className=\"timeLabel\">{timeLabel}</span>\r\n            </span>\r\n          ),\r\n          interest: interest,\r\n          totalInterest: totalInterest,\r\n          amount: p + totalInterest,\r\n          rowClassNames: null,\r\n        })\r\n      }\r\n    } else if (compoundedInterval === 'q') {\r\n      let interest\r\n      for (let i = 1; i <= tm; i++) {\r\n        if ((i - 1) % 3 === 0) {\r\n          interest = calculateCI({\r\n            p: prevPrincipal,\r\n            r,\r\n            t: { y: 1 / 4 },\r\n            intPeriod,\r\n            compoundedInterval,\r\n          })\r\n          prevPrincipal += interest\r\n          interest /= 3\r\n        }\r\n\r\n        totalInterest += interest\r\n        records.push({\r\n          time: (\r\n            <span>\r\n              {i}\r\n              {ordinalSuffixOf(i)}\r\n              <span className=\"timeLabel\">{timeLabel}</span>\r\n            </span>\r\n          ),\r\n          interest: interest,\r\n          totalInterest: totalInterest,\r\n          amount: p + totalInterest,\r\n          rowClassNames: null,\r\n        })\r\n      }\r\n    } else if (compoundedInterval === 'm') {\r\n      let interest\r\n      for (let i = 1; i <= tm; i++) {\r\n        interest = calculateCI({\r\n          p: prevPrincipal,\r\n          r,\r\n          t: { y: 1 / 12 },\r\n          intPeriod,\r\n          compoundedInterval,\r\n        })\r\n\r\n        totalInterest += interest\r\n        records.push({\r\n          time: (\r\n            <span>\r\n              {i}\r\n              {ordinalSuffixOf(i)}\r\n              <span className=\"timeLabel\">{timeLabel}</span>\r\n            </span>\r\n          ),\r\n          interest: interest,\r\n          totalInterest: totalInterest,\r\n          amount: p + totalInterest,\r\n          rowClassNames: null,\r\n        })\r\n\r\n        prevPrincipal += interest\r\n      }\r\n    } else if (compoundedInterval === 'd') {\r\n      let interest\r\n      for (let i = 1; i <= tm; i++) {\r\n        interest = calculateCI({\r\n          p: prevPrincipal,\r\n          r: r,\r\n          t: { y: 1 / 12 },\r\n          intPeriod,\r\n          compoundedInterval,\r\n        })\r\n\r\n        totalInterest += interest\r\n        records.push({\r\n          time: (\r\n            <span>\r\n              {i}\r\n              {ordinalSuffixOf(i)}\r\n              <span className=\"timeLabel\">{timeLabel}</span>\r\n            </span>\r\n          ),\r\n          interest: interest,\r\n          totalInterest: totalInterest,\r\n          amount: p + totalInterest,\r\n          rowClassNames: null,\r\n        })\r\n\r\n        prevPrincipal += interest\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(records)\r\n\r\n  const showChartBtn = showChart ? (\r\n    <Button\r\n      label=\"Show records\"\r\n      onClick={() => {\r\n        setShowChart(false)\r\n      }}\r\n      type=\"plain\"\r\n    />\r\n  ) : (\r\n    <Button\r\n      label=\"Show chart\"\r\n      onClick={() => {\r\n        setShowChart(true)\r\n      }}\r\n      type=\"plain\"\r\n    />\r\n  )\r\n\r\n  const lastRow = records.at(-1)\r\n  // console.log(lastRow)\r\n  return (\r\n    <>\r\n      <ResultNew\r\n        p={p}\r\n        totalInterest={lastRow.totalInterest}\r\n        totalAmount={lastRow.amount}\r\n      />\r\n      <div className=\"calculation-records\">\r\n        <div className=\"header-end\">\r\n          <div>\r\n            <h1>Records</h1>\r\n          </div>\r\n          <div>{showChartBtn}</div>\r\n        </div>\r\n        {!showChart && <RecordTable records={records} />}\r\n        {showChart && <ViewChart records={records} />}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction RecordTable({ records }) {\r\n  if (Array.isArray(records) && !records.length) return null\r\n  let totalInterest = 0,\r\n    totalAmount = records.at(-1).amount\r\n  records = records.map((r, i) => {\r\n    totalInterest += r.interest\r\n    return {\r\n      ...r,\r\n      interest: formatCurrency(r.interest),\r\n      totalInterest: formatCurrency(r.totalInterest),\r\n      amount: formatCurrency(r.amount),\r\n    }\r\n  })\r\n\r\n  const thead = [\r\n    { label: 'Time', key: 'time' },\r\n    { label: 'Interest', key: 'interest' },\r\n    { label: 'Total Interest', key: 'totalInterest' },\r\n    { label: 'Balance', key: 'amount' },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <TableNew thead={thead} tbody={records}>\r\n        <tfoot>\r\n          <tr className=\"highlight-row\">\r\n            <th colSpan=\"\"></th>\r\n            <th className=\"td-numeric\">Total - </th>\r\n            <th className=\"td-numeric\">{formatCurrency(totalInterest)}</th>\r\n            <th className=\"td-numeric\">{formatCurrency(totalAmount)}</th>\r\n          </tr>\r\n        </tfoot>\r\n      </TableNew>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction calculateCI({ p, r, t, intPeriod, compoundedInterval }) {\r\n  r = r / 100\r\n  r = intPeriod === 'y' ? r : r * 12\r\n  const ty = Number(t.y)\r\n  const tm = Number(t.m)\r\n\r\n  let totalInterest = 0,\r\n    newP = p,\r\n    n\r\n\r\n  switch (compoundedInterval) {\r\n    case 'h':\r\n      n = 2\r\n      break\r\n    case 'q':\r\n      n = 4\r\n      break\r\n    case 'm':\r\n      n = 12\r\n      break\r\n    case 'd':\r\n      n = 365\r\n      break\r\n    default:\r\n      n = 1\r\n      break\r\n  }\r\n\r\n  if (isFinite(ty) && ty > 0) {\r\n    newP = p * (1 + r / n) ** (ty * n)\r\n    totalInterest += newP - p\r\n  }\r\n\r\n  return totalInterest\r\n}\r\n\r\nfunction ViewChart({ records }) {\r\n  const interest = records.map((r) => {\r\n    let inx = r.amount - records[0].principal\r\n    return parseFloat(inx).toFixed(2)\r\n  })\r\n  const principal = records.map((r) => {\r\n    let prx = records[0].principal\r\n    return parseFloat(prx).toFixed(2)\r\n  })\r\n  const amount = records.map((r) => r.amount.toFixed(2))\r\n  const labels = records.map((r) => 'Year:' + r.time)\r\n\r\n  console.log(principal, interest, amount)\r\n\r\n  const series = [\r\n    {\r\n      name: 'Interest',\r\n      type: 'column',\r\n      data: interest,\r\n    },\r\n    {\r\n      name: 'Amount',\r\n      type: 'area',\r\n      data: amount,\r\n    },\r\n    {\r\n      name: 'Principal',\r\n      type: 'line',\r\n      data: principal,\r\n    },\r\n  ]\r\n  const options = {\r\n    chart: {\r\n      height: 350,\r\n      type: 'line',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false,\r\n        tools: {\r\n          zoom: false,\r\n          zoomin: false,\r\n          zoomout: false,\r\n          selection: false,\r\n        },\r\n      },\r\n    },\r\n    stroke: {\r\n      width: [0, 2, 5],\r\n      curve: 'smooth',\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '50%',\r\n      },\r\n    },\r\n    fill: {\r\n      opacity: [0.85, 0.25, 1],\r\n      gradient: {\r\n        inverseColors: false,\r\n        shade: 'light',\r\n        type: 'vertical',\r\n        opacityFrom: 0.85,\r\n        opacityTo: 0.55,\r\n        stops: [0, 100, 100, 100],\r\n      },\r\n    },\r\n    labels: labels,\r\n    markers: {\r\n      size: 0,\r\n    },\r\n    xaxis: {\r\n      type: 'text',\r\n      title: {\r\n        text: 'Years of growth',\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Amount invested',\r\n      },\r\n      // min: 0,\r\n    },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false,\r\n      y: {\r\n        formatter: function (y) {\r\n          if (typeof y !== 'undefined') {\r\n            return '₹' + y\r\n          }\r\n          return y\r\n        },\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <Chart options={options} series={series} type=\"line\" height={350} />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Installment({ period, installmentAmount, onChange }) {\r\n  const periods = [\r\n    { label: 'Monthly', value: 'm' },\r\n    { label: 'Yearly', value: 'y' },\r\n    { label: 'One time', value: '' },\r\n  ]\r\n  return (\r\n    <div className=\"form-control input-group\">\r\n      <div htmlFor=\"Installment\" className=\"form-label\">\r\n        <span style={{ paddingRight: '10px' }}>\r\n          <b>Installment</b>\r\n        </span>\r\n        {periods.map((p, i) => (\r\n          <label key={i}>\r\n            <input\r\n              name=\"period\"\r\n              value={p.value}\r\n              type=\"radio\"\r\n              checked={p.value === period ? 'checked' : ''}\r\n              onChange={(v) => onChange('period', v)}\r\n            />{' '}\r\n            {p.label}\r\n          </label>\r\n        ))}\r\n      </div>\r\n      <Input\r\n        name=\"installmentAmount\"\r\n        value={installmentAmount}\r\n        onChange={onChange}\r\n        label=\"Installment amount\"\r\n        type=\"1\"\r\n        min=\"0\"\r\n        helpText=\"Amount you want to invest regularly\"\r\n        disabled={period === ''}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Years({ value, onChange }) {\r\n  const years = Array.from(Array(61), (_, i) => i)\r\n  const options = years.map((y) => (\r\n    <option value={y} key={y}>\r\n      {y}\r\n    </option>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"form-control mr-20\">\r\n      <label htmlFor=\"Years\" className=\"form-label\">\r\n        Years\r\n      </label>\r\n      <select\r\n        name=\"years\"\r\n        value={value}\r\n        className=\"form-input form-select\"\r\n        onChange={(v) => onChange('y', v)}\r\n      >\r\n        {options}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Months({ value, onChange }) {\r\n  const months = Array.from(Array(12), (_, i) => i)\r\n  const options = months.map((m) => (\r\n    <option value={m} key={m}>\r\n      {m}\r\n    </option>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"form-control mr-20\">\r\n      <label htmlFor=\"Months\" className=\"form-label\">\r\n        Months\r\n      </label>\r\n      <select\r\n        name=\"months\"\r\n        value={value}\r\n        className=\"form-input form-select\"\r\n        onChange={(v) => onChange('m', v)}\r\n      >\r\n        {options}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CompoundedMonthly({ value, onChange }) {\r\n  const compoundedOptions = [\r\n    { label: 'Yearly (1/yr)', value: 'y' },\r\n    { label: 'Half Yearly (2/yr)', value: 'h' },\r\n    { label: 'Quarterly (4/yr)', value: 'q' },\r\n    { label: 'Monthly (12/yr)', value: 'm' },\r\n    { label: 'Daily (365/yr)', value: 'd' },\r\n  ]\r\n  const options = compoundedOptions.map((m) => (\r\n    <option value={m.value} key={m.value}>\r\n      {m.label}\r\n    </option>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"form-control mr-20\">\r\n      <label htmlFor=\"Months\" className=\"form-label\">\r\n        Compounded Interval\r\n      </label>\r\n      <select\r\n        name=\"compoundedInterval\"\r\n        value={value}\r\n        className=\"form-input form-select\"\r\n        onChange={(v) => onChange('compoundedInterval', v)}\r\n      >\r\n        {options}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ResultNew({ p, totalInterest, totalAmount }) {\r\n  // return null\r\n  return (\r\n    <div className=\"result-card display-flex justify-content-between\">\r\n      <div className=\"prc-stmt prc-stmt-wrapper\">\r\n        Amount Invested\r\n        <span className=\"d-block\">{formatCurrency(p)}</span>\r\n      </div>\r\n      <div className=\"int-stmt int-stmt-wrapper\">\r\n        Interest Gain\r\n        <span className=\"d-block\">{formatCurrency(totalInterest)}</span>\r\n      </div>\r\n      <div className=\"final-stmt final-stmt-wrapper\">\r\n        Final Amount\r\n        <span className=\"d-block\">{formatCurrency(totalAmount)}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Result({ p, totalInterest, totalAmount }) {\r\n  // if (!prevInputs) return null\r\n  // const { p, t } = prevInputs\r\n  // const ty = Number(t.y)\r\n  // const tm = Number(t.m)\r\n  // let totalTime = ''\r\n\r\n  // if (isFinite(ty) && ty > 0) {\r\n  //   totalTime += `${ty} years `\r\n  // }\r\n  // if (isFinite(tm) && tm > 0) {\r\n  //   totalTime += `${tm} month `\r\n  // }\r\n\r\n  // const result = calculateCI(prevInputs)\r\n  return (\r\n    <div className=\"border-top\">\r\n      <p className=\"prc-stmt\">\r\n        Amount Invested\r\n        <span className=\"float-right\">{formatCurrency(p)}</span>\r\n      </p>\r\n      <p className=\"int-stmt\">\r\n        Interest Gain\r\n        <span className=\"float-right\">{formatCurrency(totalInterest)}</span>\r\n      </p>\r\n      <p className=\"final-stmt\">\r\n        Final Amount\r\n        <span className=\"float-right\">{formatCurrency(totalAmount)}</span>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}